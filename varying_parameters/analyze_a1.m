% This function loads the data generated by vary_params_a1.xx.m scripts for xx = 0:100
% and calculates the wave speed and period

clear data_store
cond = 'a1';
data_store = cell(101,1);
for i = 0:100
    if (exist(sprintf(strcat('vary_params_',cond,'_%d.txt'),i), 'file') == 2)
        data_store{i+1} = importdata(sprintf(strcat('vary_params_',cond,'_%d.txt'),i));
    end
    i
end

% these values were extracted from the data generating script
vary_vals = linspace(0,3,101);
tprint = 0.1;

% calculate period and velocity
wave_num = 5;
velocity_vals = NaN(numel(data_store),1);
period_vals = NaN(numel(data_store),1);
for i = 1:numel(data_store)
    [pks_l, locs_l] = findpeaks(data_store{i}(:,1), 'MinPeakProminence',0.2);
    [pks_R, locs_R] = findpeaks(data_store{i}(:,180), 'MinPeakProminence',0.2);
    [pks_end, locs_end] = findpeaks(data_store{i}(:,200), 'MinPeakProminence',0.2);
    % if there are oscillations at all
    if (numel(locs_l) > 1)
        % if the source doesn't produce extra oscillations which don't become waves (i.e. damped bistability
        if (abs(numel(locs_end) - numel(locs_l)) <= 1)
            % if there are no damped waves (this is same as above)
            period_vals(i) = (locs_end(wave_num)-locs_end(wave_num-1))*tprint;
            velocity_vals(i) = 20/(locs_end(wave_num)-locs_R(wave_num))/tprint;
        end
    end
end

% make velocity/period plot
fig = figure;
cmap = lines(2);
colororder([cmap(1,:);cmap(2,:)])
yyaxis left
plot(vary_vals,period_vals,'o','LineWidth',3,'MarkerSize',12);
ylabel('Wave period (h)','FontSize',36);
ylim([20, 50]);
yyaxis right
plot(vary_vals,velocity_vals,'o','LineWidth',3,'MarkerSize',12);
ylabel('Wave speed (um/h)','FontSize',36);
ylim([0, 20]);
xlabel('Relative \alpha_1','FontSize',36);
x_limit = find(~isnan(period_vals));
xlim([0, 3]);
legend off
standardizePlot_yyaxis(gcf,gca,strcat('vary_a1'));
close(fig);
